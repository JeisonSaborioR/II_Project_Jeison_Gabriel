/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import ll_project_programmed_jeisonsaborio_gabrielperez.GlobalVariables;
import ll_project_programmed_jeisonsaborio_gabrielperez.Hotel;
import ll_project_programmed_jeisonsaborio_gabrielperez.Reservation;
import ll_project_programmed_jeisonsaborio_gabrielperez.Season;

/**
 *
 * @author Gabriel
 */
public class Consult4 extends javax.swing.JFrame {

    /**
     * Creates new form Consult4
     */
    public Consult4() {
        initComponents();
        setHotels();
    }

    public void setHotels(){
        
        ComboBoxListHotels.removeAllItems();
        
        ArrayList<Hotel> hotels = GlobalVariables.getInstance().getAll();  
        for (int i = 0; i < hotels.size(); i++) {
            ComboBoxListHotels.addItem(hotels.get(i).getName());
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ComboBoxListHotels = new javax.swing.JComboBox();
        ComboBoxSeasons = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextFieldIncome = new javax.swing.JTextField();
        TextFieldViews = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ComboBoxSeasons.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "High season (+25%)", "Low season (normal)", "Green season (-50%)" }));
        ComboBoxSeasons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxSeasonsActionPerformed(evt);
            }
        });

        jLabel1.setText("Income");

        jLabel2.setText("Views");

        TextFieldIncome.setEditable(false);

        TextFieldViews.setEditable(false);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(TextFieldIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TextFieldViews, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBoxSeasons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(jLabel1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ComboBoxListHotels, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(95, 95, 95))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxListHotels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxSeasons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextFieldViews, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextFieldIncome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboBoxSeasonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxSeasonsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxSeasonsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    
    String hotelName = "" ;       
    ArrayList<Hotel> hotels = new ArrayList<>();
    ArrayList<Season> seasons = new ArrayList<>();
    int seasonToSearch = 0;
    ArrayList<Reservation> reservations = new ArrayList<>();
    float incomes = 0;
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        hotelName = ComboBoxListHotels.getSelectedItem().toString();
        seasonToSearch = ComboBoxSeasons.getSelectedIndex();
        hotels = GlobalVariables.getInstance().getAll();
       
       
        for (int i = 0; i < hotels.size(); i++) {
            if(hotels.get(i).getName().equals(hotelName)){
                seasons = hotels.get(i).getSeasonList();
                for (int j = 0; j <  hotels.get(i).getReservationList().size(); j++) {
                    if(intoSeason( hotels.get(i).getReservationList().get(j).getEntryDate(),hotels.get(i).getReservationList().get(j).getDepartureDate(),seasonToSearch,seasons)){
                        reservations.add( hotels.get(i).getReservationList().get(j));
                    }
                }
            }
        }

        TextFieldViews.setText(String.valueOf(reservations.size()));
        
        for (int i = 0; i < reservations.size(); i++) {
            for (int j = 0; j < reservations.get(i).getRoomsList().size(); j++) {
                incomes( reservations.get(i).getRoomsList().get(j).getPrice());
            }
        }
        TextFieldIncome.setText(String.valueOf(incomes));
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    public void incomes(int price){
        if(seasonToSearch == 0){
            incomes += price + ((price * 25)/100);
        }else if(seasonToSearch == 1){
           incomes += price;
        }else{
            incomes += price - ((price * 50)/100);
        }
        
    }
    
    
    
    public static boolean intoSeason(String startDate, String endingDate, int seasonToSearch, ArrayList<Season> seasons){
        String entryDate = "";
        String departureDate ="";
        
        if(seasonToSearch == 0){
            for (int i = 0; i < seasons.size(); i++) {
                if (seasons.get(i).getCode().equals("s1")) {
                    entryDate = seasons.get(i).getStartDate();
                    departureDate = seasons.get(i).getFinalDate();
                }
            }
        }else if(seasonToSearch == 1){
            for (int i = 0; i < seasons.size(); i++) {
                if (seasons.get(i).getCode().equals("s2")) {
                    entryDate = seasons.get(i).getStartDate();
                    departureDate = seasons.get(i).getFinalDate();
                }
            }
        }else{
            for (int i = 0; i < seasons.size(); i++) {
                if (seasons.get(i).getCode().equals("s3")) {
                    entryDate = seasons.get(i).getStartDate();
                    departureDate = seasons.get(i).getFinalDate();
                }
            }
        }

        try {

            SimpleDateFormat formateador2 = new SimpleDateFormat("dd/MM/yyyy"); 
            Date entryDate1 = formateador2.parse(startDate);
            Date entryDate2 = formateador2.parse(entryDate);
            
            Date endingDate1 = formateador2.parse(endingDate);
            Date endingDate2 = formateador2.parse(departureDate);

            if ( entryDate1.before(entryDate2) && endingDate2.before(endingDate1) ){
                return true;
            }
        } catch (ParseException e) {
            System.out.println("Se Produjo un Error!!!  "+e.getMessage());
            return false;
        }  
        return false;
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consult4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consult4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consult4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consult4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consult4().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboBoxListHotels;
    private javax.swing.JComboBox ComboBoxSeasons;
    private javax.swing.JTextField TextFieldIncome;
    private javax.swing.JTextField TextFieldViews;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
